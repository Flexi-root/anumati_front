{"version":3,"sources":["components/FormErrorMessage.js","api.js","components/Register.js","components/Login.js","components/TableBoot.js","components/BaseCard.js","components/ListRequest.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["FormErrorMessage","props","className","children","axios","defaults","baseURL","email","password","post","name","key","Register","registerEval","params","a","api","data","console","log","onRegister","initialValues","organization","cpassword","validate","values","errors","test","onSubmit","this","isSubmitting","type","placeholder","component","Button","variant","size","disabled","React","Component","Login","loginEval","localStorage","setItem","authToken","onLogin","openRegistrationForm","setState","registered","hideRegistrationForm","state","onClick","class","TableBoot","Orders","rows","map","item","index","statusClass","toLowerCase","Table","striped","bordered","hover","width","BaseCard","isActive","ListRequest","accountId","organizationName","orderList","file","createRequest","bind","onFileChangeHandler","fetch","response","json","id","orderStatus","orderType","requestCount","district","status","createdAt","pdfUrl","formData","FormData","append","event","target","files","height","src","for","hidden","accept","onChange","Header","App","onLoginSuccess","loggedIn","style","display","marginLeft","marginRight","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.13f88dd9.chunk.js","sourcesContent":["import React from 'react';\n\nconst FormErrorMessage = (props) => {\n    return <div className=\"error-message\">{props.children}</div>;\n};\n\nexport default FormErrorMessage;\n","import axios from 'axios';\n\nconst BASE_URL = 'http://13.233.33.10:8091';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport default {\n    signIn(email, password) {\n        return axios.post('/signin', { email, password });\n    },\n\n    register(name, email, password) {\n        return axios.post('/createAccount', { name, email, password, key: 'test' });\n    },\n};\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport FormErrorMessage from './FormErrorMessage';\n\nimport '../Login.css';\nimport api from '../api';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    registerEval = async (params) => {\n        const { name, email, password } = params;\n        const { data } = await api.register(name, email, password);\n        console.log('data: ', data);\n        this.props.onRegister();\n    };\n\n    render() {\n        return (\n            <div className='form-container'>\n                <Formik\n                    className='login-form'\n                    initialValues={{\n                        name: '',\n                        email: '',\n                        organization: '',\n                        password: '',\n                        cpassword: '',\n                    }}\n                    validate={(values) => {\n                        const errors = {};\n                        if (!values.email) {\n                            errors.email = 'Required';\n                        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n                            errors.email = 'Invalid email address';\n                        }\n\n                        if (!values.password) {\n                            errors.password = 'Required';\n                        }\n\n                        if (!values.name) {\n                            errors.name = 'Required';\n                        }\n\n                        if (!values.organization) {\n                            errors.organization = 'Required';\n                        }\n\n                        if (!values.cpassword) {\n                            errors.cpassword = 'Required';\n                        }\n\n                        return errors;\n                    }}\n                    onSubmit={this.registerEval}>\n                    {({ isSubmitting }) => (\n                        <Form>\n                            <Field type='text' name='name' placeholder='Your Name' />\n                            <ErrorMessage name='name' component={FormErrorMessage} />\n\n                            <Field\n                                type='email'\n                                name='email'\n                                placeholder='Email ID (will be your username)'\n                            />\n                            <ErrorMessage name='email' component={FormErrorMessage} />\n\n                            <Field\n                                type='text'\n                                name='organization'\n                                placeholder='Organization name'\n                            />\n                            <ErrorMessage name='organization' component={FormErrorMessage} />\n\n                            <Field type='password' name='password' placeholder='Create Password' />\n                            <ErrorMessage name='password' component={FormErrorMessage} />\n\n                            <Field\n                                type='password'\n                                name='cpassword'\n                                placeholder='Confirm Password'\n                            />\n                            <ErrorMessage name='cpassword' component={FormErrorMessage} />\n                            <br></br>\n\n                            <Button\n                                variant='primary'\n                                size='lg'\n                                type='submit'\n                                disabled={isSubmitting}>\n                                Register\n                            </Button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        );\n    }\n}\n\nexport default Register;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport FormErrorMessage from './FormErrorMessage';\nimport Register from './Register';\nimport '../Login.css';\nimport api from '../api';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            registered: true,\n        };\n    }\n\n    loginEval = async (params) => {\n        const { email, password } = params;\n        const { data } = await api.signIn(email, password);\n\n        localStorage.setItem('auth', data.authToken);\n\n        this.props.onLogin();\n    };\n\n    openRegistrationForm = () => {\n        this.setState({ registered: false });\n    };\n\n    hideRegistrationForm = () => {\n        this.setState({ registered: true });\n    };\n\n    render() {\n        if (!this.state.registered) {\n            return <Register onRegister={this.hideRegistrationForm}></Register>;\n        }\n        return (\n            <div className='form-container'>\n                <Formik\n                    className='login-form'\n                    initialValues={{ email: '', password: '' }}\n                    validate={(values) => {\n                        const errors = {};\n                        if (!values.email) {\n                            errors.email = 'Required';\n                        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n                            errors.email = 'Invalid email address';\n                        }\n                        if (!values.password) {\n                            errors.password = 'Required';\n                        }\n\n                        return errors;\n                    }}\n                    onSubmit={this.loginEval}>\n                    {({ isSubmitting }) => (\n                        <Form>\n                            <Field type='email' name='email' placeholder='Email ID' />\n                            <ErrorMessage name='email' component={FormErrorMessage} />\n\n                            <Field type='password' name='password' placeholder='Create Password' />\n                            <ErrorMessage name='password' component={FormErrorMessage} />\n\n                            <br></br>\n\n                            <Button\n                                variant='primary'\n                                size='lg'\n                                type='submit'\n                                disabled={isSubmitting}>\n                                Login\n                            </Button>\n                        </Form>\n                    )}\n                </Formik>\n\n                <div onClick={this.openRegistrationForm} class='create-acc-link'>\n                    Create a new account\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React from 'react';\nimport Table from 'react-bootstrap/Table';\n\nimport '../Table.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass TableBoot extends React.Component {\n    render() {\n        const Orders = this.props.rows.map((item, index) => {\n            let statusClass = 'status';\n\n            if (item['status']) {\n                statusClass += ` ${item['status'].toLowerCase()}`;\n            }\n\n            return (\n                <tr key={index}>\n                    <td>{index}</td>\n                    <td>{item['type']}</td>\n                    <td>{item['requestCount']}</td>\n                    <td>{item['createdAt']}</td>\n                    <td>{item['district']}</td>\n                    <td className={statusClass}>{item['status']}</td>\n                    <td>{item['pdfUrl']}</td>\n                </tr>\n            );\n        });\n\n        return (\n            <div className='request-table-container'>\n                <Table striped bordered hover>\n                    <thead>\n                        <th>#</th>\n                        <th>Type</th>\n                        <th>No of Passes</th>\n                        <th>Raised on</th>\n                        <th>District</th>\n                        <th>Status</th>\n                        <th width='300'>Download</th>\n                    </thead>\n                    <tbody>{Orders}</tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default TableBoot;\n","import React from 'react';\nimport './BaseCard.css';\n\nconst BaseCard = (props) => {\n    let className = 'base-card';\n    if (props.isActive) {\n        className += ' active';\n    }\n\n    if (props.class) {\n        className += ` ${props.class}`;\n    }\n\n    return (\n        <div onClick={props.onClick} className={className}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default BaseCard;\n","import React from 'react';\nimport axios from 'axios';\nimport TableBoot from './TableBoot';\nimport BaseCard from './BaseCard';\nclass ListRequest extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            organization: this.props.organization,\n            accountId: this.props.accountId,\n            authToken: this.props.authToken,\n            organizationName: '',\n            orderList: [],\n            file: null,\n            type: null,\n        };\n        // this.sampleFunction = this.sampleFunction.bind(this);\n        this.createRequest = this.createRequest.bind(this);\n        this.onFileChangeHandler = this.onFileChangeHandler.bind(this);\n    }\n\n    async componentDidMount() {\n        //get all applications\n\n        const response = await fetch('https://api.npms.io/v2/search?q=react');\n        const data = await response.json();\n\n        await this.setState({\n            orderList: [\n                {\n                    id: '',\n                    accountId: '',\n                    orderStatus: '',\n                    orderType: '',\n                    requestCount: '100',\n\n                    district: 'Bengaluru',\n                    type: 'VEHICLE',\n                    status: 'Approved',\n                    createdAt: '25/03/2020 | 07:01 am',\n                    pdfUrl:\n                        'https://www.who.int/docs/default-source/coronaviruse/situation-reports/20200308-sitrep-48-covid-19.pdf',\n                },\n                {\n                    requestCount: '300',\n                    district: 'Bengaluru',\n                    type: 'PERSON',\n                    status: 'Pending',\n                    createdAt: '30/04/2020 | 10:01 pm',\n                    pdfUrl: null,\n                },\n            ],\n        });\n\n        await this.setState({\n            organizationName: data.organizationName,\n        });\n    }\n\n    async createRequest() {\n        // create request to save file\n        let formData = new FormData();\n        if (!this.state.type) {\n            return;\n        }\n        formData.append('type', this.state.type);\n        formData.append('accountId', this.state.accountId);\n        formData.append('authToken', this.state.authToken);\n        formData.append('file', this.state.file[0]);\n        const url = `http://localhost:3000` + '/createOrder';\n\n        try {\n            const response = await axios.post(url, formData);\n\n            console.log(response);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    async onFileChangeHandler(event) {\n        await this.setState({ file: event.target.files });\n    }\n\n    render() {\n        return (\n            <div className='padding-46'>\n                <div class='action-container'>\n                    <BaseCard isActive>\n                        <img height='60' src='../individual-order.png' />\n                    </BaseCard>\n                    <BaseCard>\n                        <img height='60' src='../vehicle-order.png' />\n                    </BaseCard>\n                    <div class='separator'></div>\n                    <BaseCard>Download Sample file</BaseCard>\n\n                    <div class='upload-container'>\n                        <label for='file-upload'>Upload file</label>\n                        <input\n                            hidden\n                            id='file-upload'\n                            type='file'\n                            accept='.csv'\n                            onChange={this.onFileChangeHandler}\n                        />\n                    </div>\n\n                    <BaseCard onClick={this.createRequest} class='send-request-btn'>\n                        Send Request\n                    </BaseCard>\n                </div>\n                <TableBoot rows={this.state.orderList} />\n            </div>\n        );\n    }\n}\nexport default ListRequest;\n","import React from 'react';\nimport './Header.css';\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <div className='app-header'>\n                <img src='../anumatiLogo.jpg' height='30' />\n                <span className='sign-out'>Sign out</span>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport Login from './components/Login';\nimport ListRequest from './components/ListRequest';\nimport Header from './components/Header';\nimport './App.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loggedIn: false,\n        };\n    }\n\n    onLoginSuccess = async () => {\n        this.setState({\n            loggedIn: true,\n        });\n    };\n\n    render() {\n        if (!this.state.loggedIn) {\n            return (\n                <div className='login-form'>\n                    <img\n                        src='../anumatiLogo.jpg'\n                        style={{\n                            display: 'block',\n                            marginLeft: 'auto',\n                            marginRight: 'auto',\n                        }}\n                    />\n                    <Login onLogin={this.onLoginSuccess} />\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Header />\n                    <ListRequest />\n                </div>\n            );\n        }\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}